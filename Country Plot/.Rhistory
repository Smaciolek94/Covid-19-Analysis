shiny::runApp()
runApp()
runApp()
countryplot <- function(region,cd){
cases <- rep(0,n)
newcases <- rep(0,n)
deaths <- rep(0,n)
newdeaths <- rep(0,n)
regioncase <- rawcases[which(rawcases$Country.Region==region),]
regiondeath <- rawdeaths[which(rawdeaths$Country.Region==region),]
#regioncase <- as.numeric(regioncase)
#regiondeath <- as.numeric(regiondeath)
for (i in 1:n){
cases[i] <- sum(regioncase[i+2])
deaths[i] <- sum(regiondeath[i+2])
if (i > 1){
newcases[i] <- cases[i] - cases[i-1]
newdeaths[i] <- deaths[i] - deaths[i-1]
}
}
newcases[1] <- cases[1]
newdeaths[1] <- deaths[1]
main1 <- paste("Total Cases in:",region,date[n])
main2 <- paste("Total Deaths in:",region,date[n])
main3 <- paste("New Cases in:",region,date[n])
main4 <- paste("New Deaths in",region,date[n])
#plot(date,cases,main=main1,ylab="cases",type="o")
#plot(date,deaths,main=main2,ylab="deaths",type="o")
if (cd=="c"){
plot(date,newcases,main=main3,ylab="cases",type="o")
}
if (cd=="d"){
plot(date,newdeaths,main=main4,ylab="deaths",type="o")
}
}
runApp('../Country Plot Shiny.R')
runApp()
runApp()
runApp()
runApp('../Country Plot Shiny.R')
runApp()
runApp('../Country Plot Shiny.R')
library(shiny); runApp('Country Plot Shiny.R')
shiny::runApp()
runApp()
if(!require("devtools"))
install.packages("devtools")
devtools::install_github("rstudio/rsconnect")
l
runApp('Country Plot Shiny.R')
runApp('Country Plot Shiny.R')
runApp('../Country Plot Shiny.R')
