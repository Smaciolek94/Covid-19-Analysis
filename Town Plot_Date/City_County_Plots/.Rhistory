shiny::runApp()
runApp()
uscases <- read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv"))
usdeaths <- read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv"))
uscases <- uscases[,-c(1:10)]
usdeaths <- usdeaths[,-c(1:10,12)]
location <- as.character(uscases$Combined_Key)
n <- ncol(uscases)-1
date <- 1:n
date <- as.Date(date,origin = "2020-01-21")
format(date,format = "%b %d %y")
townplot <- function(location,cd){
cases <- rep(0,n)
newcases <- rep(0,n)
deaths <- rep(0,n)
newdeaths <- rep(0,n)
towncase <- as.numeric(uscases[which(uscases$Combined_Key==location),])
towndeath <- as.numeric(usdeaths[which(usdeaths$Combined_Key==location),])
for (i in 1:n){
cases[i] <- sum(towncase[i+1])
deaths[i] <- sum(towndeath[i+1])
if (i > 1){
newcases[i] <- cases[i] - cases[i-1]
newdeaths[i] <- deaths[i] - deaths[i-1]
}
}
main1 <- paste("Total Cases in:",location,date[n])
main2 <- paste("Total Deaths in:",location,date[n])
main3 <- paste("New Cases in:",location,date[n])
main4 <- paste("New Deaths in:",location,date[n])
if (cd=="a"){
plot(date,cases,main=main1,ylab="cases",type="o")
}
if (cd=="b"){
plot(date,deaths,main=main2,ylab="deaths",type="o")
}
if (cd=="c"){
plot(date,newcases,main=main3,ylab="cases",type="o")
}
if (cd=="d"){
plot(date,newdeaths,main=main4,ylab="deaths",type="o")
}
}
View(uscases)
townplot("Clay, Alabama, US","d")
townplot("Clay, Alabama, US","a")
runApp()
location = "Clay, Alabama, US"
cases <- rep(0,n)
newcases <- rep(0,n)
deaths <- rep(0,n)
newdeaths <- rep(0,n)
towncase <- as.numeric(uscases[which(uscases$Combined_Key==location),])
towndeath <- as.numeric(usdeaths[which(usdeaths$Combined_Key==location),])
cases
deaths
newcases
newdeaths
location = "New York, New York, US"
cases <- rep(0,n)
newcases <- rep(0,n)
deaths <- rep(0,n)
newdeaths <- rep(0,n)
towncase <- as.numeric(uscases[which(uscases$Combined_Key==location),])
towndeath <- as.numeric(usdeaths[which(usdeaths$Combined_Key==location),])
cases
View(uscases)
location = "New York City, New York, US"
cases <- rep(0,n)
newcases <- rep(0,n)
deaths <- rep(0,n)
newdeaths <- rep(0,n)
towncase <- as.numeric(uscases[which(uscases$Combined_Key==location),])
towndeath <- as.numeric(usdeaths[which(usdeaths$Combined_Key==location),])
cases
towncase
towndeath
View(uscases)
View(usdeaths)
cases <- rep(0,n)
newcases <- rep(0,n)
deaths <- rep(0,n)
newdeaths <- rep(0,n)
regioncase <- rawcases[which(rawcases$Country.Region==region),]
regiondeath <- rawdeaths[which(rawdeaths$Country.Region==region),]
#regioncase <- as.numeric(regioncase)
#regiondeath <- as.numeric(regiondeath)
runApp()
View(uscases)
towncase <- as.numeric(uscases[which(uscases$Combined_Key==location),])
towndeath <- as.numeric(usdeaths[which(usdeaths$Combined_Key==location),])
towncase
towndeath
for (i in 1:n){
cases[i] <- towncase[i+1]
deaths[i] <- towndeath[i+1]
if (i > 1){
newcases[i] <- cases[i] - cases[i-1]
newdeaths[i] <- deaths[i] - deaths[i-1]
}
}
cases
deaths
newcases
newdeaths
plot(date,cases,main=main1,ylab="cases",type="o")
plot(date,deaths,main=main2,ylab="deaths",type="o")
plot(date,newcases,main=main3,ylab="cases",type="o")
plot(date,newdeaths,main=main4,ylab="deaths",type="o")
location <- as.character(uscases$Combined_Key)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
