uscases <- read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv"))
usdeaths <- read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv"))
uscases <- uscases[,-c(1:5,8:11)]
usdeaths <- usdeaths[,-c(1:5,8:12)]
statenames <- unique(uscases$Province_State)
n <- ncol(uscases)-2
date <- 1:n
predictedcases <- function(nahead) {
cases <- rep(0,n)
newcases <- rep(0,n)
for (i in 1:n){
cases[i]<- sum(uscases[,i+2])
if (i>2){
newcases[i] <- cases[i] - cases[i-1]
}
}
newcases[1] <- cases[1]
cleandata <- data.frame(date,cases,newcases)
wmean <- weighted.mean(date,cases)
max <- cleandata[which(cleandata$newcases==max(cleandata$newcases)),]
maxmean <- max[1,1]
library(radiant.data)
wsd <- weighted.sd(date,cases)
predcases <- rep(0,nahead)
for (i in 1:nahead){
predcases[i] <- max[1,3]*dnorm(n+i,maxmean,2*wsd)/dnorm(max[1,1],maxmean,2*wsd)
}
totcases <- c(newcases,predcases)
newdate <- 1:(n+nahead)
newdate <- as.Date(newdate,origin = "2020-01-21")
format(newdate,format = "%b %d %y")
main = paste("Predicted New Cases: Total US",nahead,"Days Out, in Red")
plot(newdate,totcases,col=c(rep("black",n),rep("red",nahead)),type="p",main=main,ylab="New Daily Cases",xlab="Date")
}
predictedstatecases <- function(state,nahead) {
cases <- rep(0,n)
newcases <- rep(0,n)
statecases <- uscases[which(uscases$Province_State==state),]
for (i in 1:n){
cases[i]<- sum(statecases[,i+2])
if (i>2){
newcases[i] <- cases[i] - cases[i-1]
}
}
newcases[1] <- cases[1]
cleandata <- data.frame(date,cases,newcases)
wmean <- weighted.mean(date,cases)
max <- cleandata[which(cleandata$newcases==max(cleandata$newcases)),]
maxmean <- max[1,1]
library(radiant.data)
wsd <- weighted.sd(date,cases)
predcases <- rep(0,nahead)
for (i in 1:nahead){
predcases[i] <- max[1,3]*dnorm(n+i,maxmean,2*wsd)/dnorm(max[1,1],maxmean,2*wsd)
}
totcases <- c(newcases,predcases)
newdate <- 1:(n+nahead)
newdate <- as.Date(newdate,origin = "2020-01-21")
format(newdate,format = "%b %d %y")
main = paste("Predicted New Cases:",state,nahead,"Days Out, in Red")
plot(newdate,totcases,col=c(rep("black",n),rep("red",nahead)),type="p",main=main,ylab="New Daily Cases",xlab="Date")
}
library(shiny)
ui <- fluidPage(
titlePanel("Predicted Plots"),
selectInput(inputId = "state",label = "Choose Your State",choices = statenames),
sliderInput(inputId = "nahead",
label= "Number of Days ahead to Predict",
min = 1,
max = 60,
value = 1),
plotOutput("plot1")
)
server <- function(input,output){
output$plot1<-renderPlot({
predictedstatecases(input$state,input$nahead)
})
}
shinyApp(ui = ui,server = server)
runApp('~/GitHub/Covid-19-Analysis/Predictor Base Function.R')
runApp('~/GitHub/Covid-19-Analysis/Predictor Base Function.R')
runApp('~/GitHub/Covid-19-Analysis/Predictor/Predictor')
runApp('~/GitHub/Covid-19-Analysis/Predictor/Predictor')
runApp('~/GitHub/Covid-19-Analysis/Predictor/Predictor')
runApp('~/GitHub/Covid-19-Analysis/Predictor/Predictor')
runApp('~/GitHub/Covid-19-Analysis/Predictor/Predictor')
runApp('~/GitHub/Covid-19-Analysis/Predictor/Predictor')
knitr::opts_chunk$set(echo = TRUE)
#Generating series
library(TSA)
set.seed(1432756)
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
setaside <- series[33:36]
#part a:
#estimating parameters when the model is specified as an ARIMA(0,0,2)
arima(series[1:32],order=c(0,0,2))
#part a:
#estimating parameters when the model is specified as an ARIMA(0,0,2)
arima(series[1:32],order=c(0,0,2),method="MLE")
#part a:
#estimating parameters when the model is specified as an ARIMA(0,0,2)
arima(series[1:32],order=c(0,0,2),method="ML")
#part b:
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
total <- c(series[1:32],predict$pred)
plot(1:36,total,type="o",main="Time Series with Predicted in Red",xlab="time",col=c(rep("black",32),rep("red",4)))
abline(h=fit$coef[3])
#part c:
print(predict$pred)
print(fit$coef[3])
#part d:
plot(33:36,setaside,type="o",xlab="value",ylab="Time",main="Observed Values vs Predicted in Red")
lines(33:36,predict$pred,type="o",col="red")
#part d:
plot(33:36,setaside,type="o",xlab="Time",ylab="value",main="Observed Values vs Predicted in Red")
lines(33:36,predict$pred,type="o",col="red")
#part e:
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
plot(33:36,setaside,type="o",xlab="value",ylab="Time",ylim=c(95,105),main="Observed vs Predicted in Red with 95% Error Bands")
lines(33:36,predict$pred,type="o",col="red")
lines(33:36,limlower,type="l",col="red")
lines(33:36,limupper,type="l",col="red")
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
if (predict[1]>limlower && predict[2]>limlower && predict[3]>limlower predict[4]>limlower && predict[1]<limupper && predict[2]<limupper && predict[3]<limupper && predict[4]<limupper){
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
if (predict[1]>limlower && predict[2]>limlower && predict[3]>limlower predict[4]>limlower && predict[1]<limupper && predict[2]<limupper && predict[3]<limupper && predict[4]<limupper){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
if (predict[1]>limlower && predict[2]>limlower && predict[3]>limlower predict[4]>limlower && predict[1]<limupper && predict[2]<limupper && predict[3]<limupper && predict[4]<limupper){
View(predict)
if (predict$pred[1]>limlower && predict$pred[2]>limlower && predict$pred[3]>limlower && predict$pred[4]>limlower && predict$pred[1]<limupper && predict$pred[2]<limupper && predict$predict[3]<limupper && predict$pred[4]<limupper){
tf[i] <- 1
}
tf
View(predict)
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
if (predict$pred[1]>limlower && predict$pred[2]>limlower && predict$pred[3]>limlower && predict$pred[4]>limlower && predict$pred[1]<limupper && predict$pred[2]<limupper && predict$predict[3]<limupper && predict$pred[4]<limupper){
tf[i] <- 1
}
}
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
if (predict$pred[1]>limlower && predict$pred[2]>limlower && predict$pred[3]>limlower && predict$pred[4]>limlower && predict$pred[1]<limupper && predict$pred[2]<limupper && predict$predict[3]<limupper && predict$pred[4]<limupper){
tf[i] <- 1
}
}
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
if (predict$pred[1]>limlower && predict$pred[2]>limlower && predict$pred[3]>limlower && predict$pred[4]>limlower && predict$pred[1]<limupper && predict$pred[2]<limupper && predict$pred[3]<limupper && predict$pred[4]<limupper){
tf[i] <- 1
}
}
tf
mean(tf)
View(predict)
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
if (series[33]>limlower && series[34]>limlower && series[35]>limlower && series[36]>limlower && series[33]<limupper && series[34]<limupper && series[35]<limupper && series[36]<limupper){
tf[i] <- 1
}
}
mean(tf)
.95^4
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
if (series[33]>limlower && series[34]>limlower && series[35]>limlower && series[36]>limlower && series[33]<limupper && series[34]<limupper && series[35]<limupper && series[36]<limupper){
tf[i] <- 1
}
}
mean(tf)
.95^4
.272+.8145
tf
.95^4
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
if (series[33]>limlower && series[34]>limlower && series[35]>limlower && series[36]>limlower && series[33]<limupper && series[34]<limupper && series[35]<limupper && series[36]<limupper){
tf[i] <- 1
}
}
mean(tf)
.95^4
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
if (series[33]>limlower && series[34]>limlower && series[35]>limlower && series[36]>limlower && series[33]<limupper && series[34]<limupper && series[35]<limupper && series[36]<limupper){
tf[i] <- 1
}
}
mean(tf)
.95^4
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
if (series[33]>limlower && series[34]>limlower && series[35]>limlower && series[36]>limlower && series[33]<limupper && series[34]<limupper && series[35]<limupper && series[36]<limupper){
tf[i] <- 1
}
}
mean(tf)
.95^4
View(predict)
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
if (series[33]>limlower && series[34]>limlower && series[35]>limlower && series[36]>limlower && series[33]<limupper && series[34]<limupper && series[35]<limupper && series[36]<limupper){
tf[i] <- 1
}
}
mean(tf)
.95^4
limlower
series[33:36]
limupper
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
dum<-rep[0,4]
for (j in i:4){
if (limlower[j]<series[j+32]&&limupper[j]>series[j+32]){
dum[j] <- 1
}
}
if(all(dum<1)){tf[i]<-1}
}
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
dum<-rep(0,4)
for (j in i:4){
if (limlower[j]<series[j+32]&&limupper[j]>series[j+32]){
dum[j] <- 1
}
}
if(all(dum<1)){tf[i]<-1}
}
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
dum<-rep(0,4)
for (j in i:4){
if ((limlower[j]<series[j+32])&&(limupper[j]>series[j+32])){
dum[j] <- 1
}
}
if(all(dum==1)){tf[i]<-1}
}
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
dum<-rep(0,4)
for (j in i:4){
if ((limlower[j]<series[j+32])&&(limupper[j]>series[j+32])) {
dum[j] <- 1
}
}
if(all(dum==1)){tf[i]<-1}
}
limlower[4]
limupper[4]
series[36]
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
dum<-rep(0,4)
for (j in i:4){
if ((limlower[j]<series[j+32])&&(limupper[j]>series[j+32])){
dum[j] <- 1
}
}
if(all(dum==1)){tf[i]<-1}
}
limupper
limlower
series[33:36]
series[33:36] < limupper
up<- series[33:36] < limupper
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
dum<-rep(0,4)
low <- series[33:36] > limlower
up <- series[33:36] < limupper
if(all(up==TRUE)&&all(low==TRUE)){tf[i=1]}
}
mean(tf)
.95^4
all(up==TRUE)
all(low==TRUE)
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
dum<-rep(0,4)
low <- series[33:36] > limlower
up <- series[33:36] < limupper
if((all(up==TRUE)&&all(low==TRUE))){tf[i=1]}
}
mean(tf)
.95^4
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
low <- series[33:36] > limlower
up <- series[33:36] < limupper
if((all(up==TRUE)&&all(low==TRUE))){tf[i]<-1}
}
mean(tf)
.95^4
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
low <- series[33:36] > limlower
up <- series[33:36] < limupper
if((all(up==TRUE)&&all(low==TRUE))){tf[i]<-1}
}
mean(tf)
.95^4
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
low <- series[33:36] > limlower
up <- series[33:36] < limupper
if((all(up==TRUE)&&all(low==TRUE))){tf[i]<-1}
}
mean(tf)
.95^4
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
low <- series[33:36] > limlower
up <- series[33:36] < limupper
if((all(up==TRUE)&&all(low==TRUE))){tf[i]<-1}
}
mean(tf)
.95^4
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,set.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
low <- series[33:36] > limlower
up <- series[33:36] < limupper
if((all(up==TRUE)&&all(low==TRUE))){tf[i]<-1}
}
mean(tf)
.95^4
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,se.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
low <- series[33:36] > limlower
up <- series[33:36] < limupper
if((all(up==TRUE)&&all(low==TRUE))){tf[i]<-1}
}
mean(tf)
.95^4
#part f
tf = rep(0,500)
for (i in 1:500){
series<-arima.sim(n=36,list(ma=c(-1,0.6)))+100
fit <- arima(series[1:32],order=c(0,0,2))
predict <- predict(fit,n.ahead=4,se.fit=TRUE)
limlower <- predict$pred - 1.96*predict$se
limupper <- predict$pred + 1.96*predict$se
low <- series[33:36] > limlower
up <- series[33:36] < limupper
if((all(up==TRUE)&&all(low==TRUE))){tf[i]<-1}
}
mean(tf)
.95^4
.95^10
pnorm(1.96)
prorm(2)
pnorm(2)
pnorm(-1.96)
.9750021-.00249979
.9750021 - .0249979
^4
0.9500042^4
plot(fit,n.ahead=4)
