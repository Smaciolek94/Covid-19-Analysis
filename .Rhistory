ratioprev <- rep(0,100)
for (i in 1:100){
ratio[i] <- rawbycase$placesum[i-1] / rawbycase$placesum[i]
}
plot(ratio[1:100],main="ratio of number of cases to previous",type="o",xlab="rank (#1 means worst hit)",ylab="ratio")
lines(ratio)
ratioprev <- rep(0,100)
for (i in 1:100){
ratioprev[i] <- rawbycase$placesum[i-1] / rawbycase$placesum[i]
}
plot(ratioprev[1:100],main="ratio of number of cases to previous",type="o",xlab="rank (#1 means worst hit)",ylab="ratio")
lines(ratio)
#importing
raw <- read.csv("C:\\Users\\Stvma\\Desktop\\Covid-19\\covid_cases.csv",header= TRUE)
raw <- as.data.frame(raw)
#converting case counts to intergers
raw[,12:ncol(raw)] <- as.integer(unlist(raw[,12:ncol(raw)]))
daysums <- rep(0,(ncol(raw)-11))
#converting lat/long values to intergers
raw[,8:9] <- as.numeric(unlist(raw[,8:9]))
#summing case counts by day
for (i in 12:ncol(raw)){
daysums[(i-11)] <- sum(raw[,i])
}
#creating a date vector
date <- 1:(ncol(raw)-11)
date <- as.Date(date,origin = "2020-01-20")
format(date,format = "%b %d %y")
#time plot of total cases by day
plot(date,daysums,main="total US cases",ylab = "new cases",xlab = "date",type="o")
placesum <- rep(0,nrow(raw))
#summing the cases by place
for (i in 1:nrow(raw)){
placesum[i] <- sum(raw[i,12:ncol(raw)])
}
#attaching place sum to raw data
raw <- cbind(raw,placesum)
#creating a new data frame and sorting by number of infections by place
placelist <- data.frame(as.character(raw$Admin2),as.character(raw$Province_State),raw$placesum)
placelist <- placelist[order(-placesum),]
rank <- 1:nrow(placelist)
placelist <- data.frame(rank,placelist)
#list of case counts by place
colnames(placelist)=c("Rank","City","State","Total cases as of 3/30")
#printing 10 worse areas
#print("Top 10 worst affected areas")
#print(placelist[1:10,],row.names=FALSE,class=FALSE,right=TRUE)
write.csv(placelist,"C:\\Users\\Stvma\\Documents\\GitHub\\Covid-19-Analysis\\Ranked_Places.csv",row.names=FALSE)
#creating a new dataframe by number of cases
rawbycase <- raw[order(-placesum),]
#time plots of the 10 worst places
for (i in 1:10){
main = paste("Cases in",rawbycase$Admin2[i],",",rawbycase$Province_State[i])
trimmedcase <- as.numeric(rawbycase[i,12:80])
plot(date,trimmedcase,main = main,type="o",xlab="date",ylab="cases")
}
plot(rawbycase$placesum[1:10],main="Chart of infected places",ylab="cases",xlab="rank (#1 means worst hit)",type="o")
ntrys <- 200
ratio <- rep(0,ntrys)
for (i in 1:ntrys){
ratio[i] <- rawbycase$placesum[1] / rawbycase$placesum[i]
}
plot(ratio,main="ratio of number of cases to worst",type="o",xlab="rank (#1 means worst hit)",ylab="ratio")
rank <- 1:ntrys
#for (i in 1:10){
#ratiomodel <- lm(ratio~poly(rank,i))
#plot(ratiomodel$residuals)
#qqnorm(ratiomodel$fitted.values)
#plot(ratio,main="ratio of number of cases to worst",type="l",col="black",xlab="rank (#1 means worst hit)",ylab="ratio")
#lines(ratiomodel$fitted.values,type="l",col="blue")
}
ratiomodel <- lm(ratio~poly(rank,5))
summary(ratiomodel)
plot(ratiomodel$residuals,main="residual plot, 5th order poly",ylab="residuals",xlab="rank")
qqnorm(ratiomodel$fitted.values,main = "qqplot of 5th order poly fit")
plot(ratio,main="ratio of number of cases to worst",type="l",col="black",xlab="rank (#1 means worst hit)",ylab="ratio")
lines(ratiomodel$fitted.values,type="l",col="blue")
ratioprev <- rep(0,100)
for (i in 1:100){
ratioprev[i] <- rawbycase$placesum[i-1] / rawbycase$placesum[i]
}
plot(ratioprev[1:100],main="ratio of number of cases to previous",type="o",xlab="rank (#1 means worst hit)",ylab="ratio")
lines(ratio)
raw <- read.csv("C:\Users\Stvma\Documents\GitHub\Covid-19-Analysis\covid_cases.csv",header= TRUE)
raw <- read.csv("C:\\Users\\Stvma\\Documents\\GitHub\\Covid-19-Analysis\\covid_cases.csv",header= TRUE)
raw <- as.data.frame(raw)
#converting case counts to intergers
raw[,12:ncol(raw)] <- as.integer(unlist(raw[,12:ncol(raw)]))
daysums <- rep(0,(ncol(raw)-11))
#converting lat/long values to intergers
raw[,8:9] <- as.numeric(unlist(raw[,8:9]))
#summing case counts by day
for (i in 12:ncol(raw)){
daysums[(i-11)] <- sum(raw[,i])
}
#creating a date vector
date <- 1:(ncol(raw)-11)
date <- as.Date(date,origin = "2020-01-20")
format(date,format = "%b %d %y")
#time plot of total cases by day
plot(date,daysums,main="total US cases",ylab = "new cases",xlab = "date",type="o")
placesum <- rep(0,nrow(raw))
#summing the cases by place
for (i in 1:nrow(raw)){
placesum[i] <- sum(raw[i,12:ncol(raw)])
}
#attaching place sum to raw data
raw <- cbind(raw,placesum)
#creating a new data frame and sorting by number of infections by place
placelist <- data.frame(as.character(raw$Admin2),as.character(raw$Province_State),raw$placesum)
placelist <- placelist[order(-placesum),]
rank <- 1:nrow(placelist)
placelist <- data.frame(rank,placelist)
#list of case counts by place
colnames(placelist)=c("Rank","City","State","Total cases as of 3/30")
#printing 10 worse areas
#print("Top 10 worst affected areas")
#print(placelist[1:10,],row.names=FALSE,class=FALSE,right=TRUE)
write.csv(placelist,"C:\\Users\\Stvma\\Documents\\GitHub\\Covid-19-Analysis\\Ranked_Places.csv",row.names=FALSE)
#creating a new dataframe by number of cases
rawbycase <- raw[order(-placesum),]
#time plots of the 10 worst places
for (i in 1:10){
main = paste("Cases in",rawbycase$Admin2[i],",",rawbycase$Province_State[i])
trimmedcase <- as.numeric(rawbycase[i,12:80])
plot(date,trimmedcase,main = main,type="o",xlab="date",ylab="cases")
}
plot(rawbycase$placesum[1:10],main="Chart of infected places",ylab="cases",xlab="rank (#1 means worst hit)",type="o")
ntrys <- 200
ratio <- rep(0,ntrys)
for (i in 1:ntrys){
ratio[i] <- rawbycase$placesum[1] / rawbycase$placesum[i]
}
plot(ratio,main="ratio of number of cases to worst",type="o",xlab="rank (#1 means worst hit)",ylab="ratio")
rank <- 1:ntrys
#for (i in 1:10){
#ratiomodel <- lm(ratio~poly(rank,i))
#plot(ratiomodel$residuals)
#qqnorm(ratiomodel$fitted.values)
#plot(ratio,main="ratio of number of cases to worst",type="l",col="black",xlab="rank (#1 means worst hit)",ylab="ratio")
#lines(ratiomodel$fitted.values,type="l",col="blue")
}
ratiomodel <- lm(ratio~poly(rank,5))
summary(ratiomodel)
plot(ratiomodel$residuals,main="residual plot, 5th order poly",ylab="residuals",xlab="rank")
qqnorm(ratiomodel$fitted.values,main = "qqplot of 5th order poly fit")
plot(ratio,main="ratio of number of cases to worst",type="l",col="black",xlab="rank (#1 means worst hit)",ylab="ratio")
lines(ratiomodel$fitted.values,type="l",col="blue")
ratioprev <- rep(0,100)
for (i in 1:100){
ratioprev[i] <- rawbycase$placesum[i-1] / rawbycase$placesum[i]
}
plot(ratioprev[1:100],main="ratio of number of cases to previous",type="o",xlab="rank (#1 means worst hit)",ylab="ratio")
lines(ratio)
ratioprev <- rep(1,100)
for (i in 2:100){
ratioprev[i] <- rawbycase$placesum[i-1] / rawbycase$placesum[i]
}
plot(ratioprev[1:100],main="ratio of number of cases to previous",type="o",xlab="rank (#1 means worst hit)",ylab="ratio")
lines(ratio)
library(read.xl
library(read.xl)
library(read.xl)
library(readxl)
install.packages("readxl")
library(readxl)
read_xls("C:\\Users\\Stvma\\Documents\\GitHub\\Covid-19-Analysis\\Census Data\\Age\\Census Age Data 1.xls")
install.packages("readxl")
age1 <- read_xls("C:\\Users\\Stvma\\Documents\\GitHub\\Covid-19-Analysis\\Census Data\\Age\\Census Age Data 1.xls")
View(age1)
age<- rep(0,10)
for (i in 1:10){
age[i] <- read_xls("C:\\Users\\Stvma\\Documents\\GitHub\\Covid-19-Analysis\\Census Data\\Age\\Census Age Data 1.xls",sheet = i)
}
View(age1)
#age<- rep(0,10)
for (i in 1:10){
age[i] <- read_xls("C:\\Users\\Stvma\\Documents\\GitHub\\Covid-19-Analysis\\Census Data\\Age\\Census Age Data 1.xls",sheet = i)
}
age1 <- vector(mode = "list", length = 10)
for (i in 1:10){
age1[i] <- read_xls("C:\\Users\\Stvma\\Documents\\GitHub\\Covid-19-Analysis\\Census Data\\Age\\Census Age Data 1.xls",sheet = i)
}
View(age1)
age1$1
age1$[[1]]
age1 <- rep(NA,10)
age1 <- as.list(age1)
for (i in 1:10){
age1[i] <- read_xls("C:\\Users\\Stvma\\Documents\\GitHub\\Covid-19-Analysis\\Census Data\\Age\\Census Age Data 1.xls",sheet = i)
}
