plot(date,log(daynj),main = "observed vs predicted",ylab="cases",col="black")
lines(date,predict(p),col="blue")
}
}
model(1,"no")
model(1,"yes")
for (i in 1:5){
model(i,"no")
}
model <- function(degree,log){
if (log == "no"){
p <- lm(daynj~poly(date,degree))
summary(p)
main = paste("observed vs predicted, poly order: ",i)
plot(date,daynj,main = main,ylab="cases",col="black")
lines(date,predict(p),col="blue")
}
if (log == "yes"){
p <- lm(log(daynj)~poly(date,degree))
summary(p)
main = paste("observed vs predicted, log order :",i)
plot(date,log(daynj),main = "observed vs predicted",ylab="cases",col="black")
lines(date,predict(p),col="blue")
}
}
for (i in 1:10){
model(i,"no")
}
model <- function(degree,log){
if (log == "no"){
p <- lm(daynj~poly(date,degree))
print(summary(p))
main = paste("observed vs predicted, poly order: ",i)
plot(date,daynj,main = main,ylab="cases",col="black")
lines(date,predict(p),col="blue")
}
if (log == "yes"){
p <- lm(log(daynj)~poly(date,degree))
print(summary(p))
main = paste("observed vs predicted, log order :",i)
plot(date,log(daynj),main = "observed vs predicted",ylab="cases",col="black")
lines(date,predict(p),col="blue")
}
}
for (i in 1:10){
model(i,"no")
}
model <- function(degree,log){
if (log == "no"){
p <- lm(daynj~poly(date,degree))
print(summary(p))
main = paste("observed vs predicted, poly order: ",i)
plot(date,daynj,main = main,ylab="cases",col="black")
lines(date,predict(p),col="blue")
plot(date,p$residuals,main="residual plot")
qqnorm(p$residuals,main="qqplot")
}
if (log == "yes"){
p <- lm(log(daynj)~poly(date,degree))
print(summary(p))
main = paste("observed vs predicted, log order :",i)
plot(date,log(daynj),main = "observed vs predicted",ylab="cases",col="black")
lines(date,predict(p),col="blue")
}
}
model(5,"no")
for (i in 1:10){
model(i,"no")
}
plot((log(daynj)+.01))
plot(log(daynj+.01))
plot(log(.01*daynj+1.))
plot(date,p$residuals,main="residual plot")
qqnorm(p$residuals,main="qqplot")
plot(log(.01*daynj+1))
plot(log(.1*daynj+1))
model <- function(degree,log){
if (log == "no"){
p <- lm(daynj~poly(date,degree))
print(summary(p))
main = paste("observed vs predicted, poly order: ",i)
plot(date,daynj,main = main,ylab="cases",col="black")
lines(date,predict(p),col="blue")
plot(date,p$residuals,main="residual plot")
qqnorm(p$residuals,main="qqplot")
}
if (log == "yes"){
logdaynj <- log(.1*daynj+1)
p <- lm(logdaynj~poly(date,degree))
print(summary(p))
main = paste("observed vs predicted, log order :",i)
plot(date,logdaynj,main = "observed vs predicted",ylab="cases",col="black")
lines(date,predict(p),col="blue")
plot(date,p$residuals,main="residual plot")
qqnorm(p$residuals,main="qqplot")
}
}
for (i in 1:10){
model(i,"yes")
}
raw <- read.csv("C:\\Users\\Stvma\\Documents\\GitHub\\Covid-19-Analysis\\covid-cases-worldwide.csv",header=TRUE)
date <- 1:(ncol(rawchina)-4)
date <- as.Date(date,origin = "2020-01-21")
format(date,format = "%b %d %y")
date <- as.Date(date,origin = "2020-01-21")
format(date,format = "%b %d %y")
date <- 1:(ncol(raw)-4)
date <- as.Date(date,origin = "2020-01-21")
format(date,format = "%b %d %y")
#South Korea and Japan
rawkorea <- raw[which(raw$Country.Region=="South Korea"),]
rawjapan <- raw[which(raw$Country.Region=="Japan"),]
daytotalkorea <- rep(0,ncol(rawkorea)-4)
daytotaljapan <- rep(0,ncol(rawjapan)-4)
newdaykorea <- rep(0,ncol(rawkorea)-4)
newdayjapan <- rep(0,ncol(rawjapan)-4)
for (i in 5:ncol(rawchina)){
daytotalkorea[(i-4)] <- sum(rawkorea[,i])
daytotaljapan[(i-4)] <- sum(rawjapan[,i])
}
plot(date,newdaytotalkorea,main="South Korea Total Cases")
plot(date,newdaytotaljapan,main="Japan Total Cases")
plot(date,daytotalkorea,main="South Korea Total Cases")
plot(date,daytotaljapan,main="Japan Total Cases")
View(rawjapan)
View(raw)
plot(date,rawjapan[5:75],main="cases in Japan as of 4/3",ylab="cases",type="o")
plot(date,rawjapan[5:75],main="cases in Japan as of 4/2",ylab="cases",type="o")
View(raw)
#Data as of 4/3
raw <- read.csv("C:\\Users\\Stvma\\Documents\\GitHub\\Covid-19-Analysis\\US_confirmed_4-3.csv",header=TRUE)
raw <- raw[,-c(1:5,8:11)] #removing nonimportant columns
rawnj <- raw[which(raw$Province_State=="New Jersey"),]
daynj <- rep(0,(ncol(rawnj)-2))
daynewnj <- rep(0,(ncol(rawnj)-2))
for (i in 1:(ncol(rawnj)-2)){
daynj[i] <- sum(rawnj[,i+2])
if (i>2){
daynewnj[i] <- daynj[i] - daynj[i-1]
}
}
daynewnj[1] <- daynj[1]
date <- 1:(ncol(raw)-2)
date <- as.Date(date,origin = "2020-01-21")
format(date,format = "%b %d %y")
df<- data.frame(date,daynj,daynewnj)
df
df<- df[which(df$daynj != 0),]
df
plot(df$date,df$daynj,main="truncated cases")
plot(df$date,df$daynewnj,main="truncated new daily cases")
plot(df$date,df$daynj,main="truncated cases",type="o")
plot(df$date,df$daynewnj,main="truncated new daily cases",type="o")
model <- function(degree,log){
if (log == "no"){
p <- lm(daynj~poly(date,degree))
print(summary(p))
main = paste("observed vs predicted, poly order: ",i)
plot(date,daynj,main = main,ylab="cases",col="black")
lines(date,predict(p),col="blue")
plot(date,p$residuals,main="residual plot")
qqnorm(p$residuals,main="qqplot")
}
if (log == "yes"){
logdaynj <- log(.1*daynj+1)
p <- lm(logdaynj~poly(date,degree))
print(summary(p))
main = paste("observed vs predicted, log order :",i)
plot(date,logdaynj,main = "observed vs predicted",ylab="cases",col="black")
lines(date,predict(p),col="blue")
plot(date,p$residuals,main="residual plot")
qqnorm(p$residuals,main="qqplot")
}
}
#new function
trucmodel <- function(degree,log){
if (log == "no"){
p <- lm(df$daynj~poly(df$date,degree))
print(summary(p))
main = paste("observed vs predicted, poly order: ",i)
plot(date,daynj,main = main,ylab="cases",col="black")
lines(date,predict(p),col="blue")
plot(date,p$residuals,main="residual plot")
qqnorm(p$residuals,main="qqplot")
}
if (log == "yes"){
logdaynj <- log(.1*df$daynj+1)
p <- lm(logdaynj~poly(df$date,degree))
print(summary(p))
main = paste("observed vs predicted, log order :",i)
plot(date,logdaynj,main = "observed vs predicted",ylab="cases",col="black")
lines(date,predict(p),col="blue")
plot(date,p$residuals,main="residual plot")
qqnorm(p$residuals,main="qqplot")
}
}
plot(log(df$daynj))
for(i in 1:10){truncmodel(i,"no")}
for(i in 1:10){trucmodel(i,"no")}
#new function
trucmodel <- function(degree,log){
if (log == "no"){
p <- lm(df$daynj~poly(df$date,degree))
print(summary(p))
main = paste("observed vs predicted, poly order: ",i)
plot(date,daynj,main = main,ylab="cases",col="black")
lines(date,predict(p),col="blue")
plot(df$date,p$residuals,main="residual plot")
qqnorm(p$residuals,main="qqplot")
}
if (log == "yes"){
logdaynj <- log(.1*df$daynj+1)
p <- lm(logdaynj~poly(df$date,degree))
print(summary(p))
main = paste("observed vs predicted, log order :",i)
plot(date,logdaynj,main = "observed vs predicted",ylab="cases",col="black")
lines(date,predict(p),col="blue")
plot(df$date,p$residuals,main="residual plot")
qqnorm(p$residuals,main="qqplot")
}
}
for(i in 1:10){trucmodel(i,"no")}
#new function
trucmodel <- function(degree,log){
if (log == "no"){
p <- lm(df$daynj~poly(df$date,degree))
print(summary(p))
main = paste("observed vs predicted, poly order: ",i)
plot(df$date,daynj,main = main,ylab="cases",col="black")
lines(df$date,predict(p),col="blue")
plot(df$date,p$residuals,main="residual plot")
qqnorm(p$residuals,main="qqplot")
}
if (log == "yes"){
logdaynj <- log(.1*df$daynj+1)
p <- lm(logdaynj~poly(df$date,degree))
print(summary(p))
main = paste("observed vs predicted, log order :",i)
plot(df$date,logdaynj,main = "observed vs predicted",ylab="cases",col="black")
lines(df$date,predict(p),col="blue")
plot(df$date,p$residuals,main="residual plot")
qqnorm(p$residuals,main="qqplot")
}
}
for(i in 1:10){trucmodel(i,"no")}
#new function
trucmodel <- function(degree,log){
if (log == "no"){
p <- lm(df$daynj~poly(df$date,degree))
print(summary(p))
main = paste("observed vs predicted, poly order: ",i)
plot(df$date,df$daynj,main = main,ylab="cases",col="black")
lines(df$date,predict(p),col="blue")
plot(df$date,p$residuals,main="residual plot")
qqnorm(p$residuals,main="qqplot")
}
if (log == "yes"){
logdaynj <- log(.1*df$daynj+1)
p <- lm(logdaynj~poly(df$date,degree))
print(summary(p))
main = paste("observed vs predicted, log order :",i)
plot(df$date,logdaynj,main = "observed vs predicted",ylab="cases",col="black")
lines(df$date,predict(p),col="blue")
plot(df$date,p$residuals,main="residual plot")
qqnorm(p$residuals,main="qqplot")
}
}
for(i in 1:10){trucmodel(i,"no")}
for(i in 1:10){trucmodel(i,"yes")}
trucmodel <- function(degree,log){
if (log == "no"){
p <- lm(df$daynj~poly(df$date,degree))
print(summary(p))
main = paste("observed vs predicted, poly order: ",i)
plot(df$date,df$daynj,main = main,ylab="cases",col="black")
lines(df$date,predict(p),col="blue")
plot(df$date,p$residuals,main="residual plot")
qqnorm(p$residuals,main="qqplot")
}
if (log == "yes"){
logdaynj <- log(.1*df$daynj+1)
p <- lm(logdaynj~poly(df$date,degree))
print(summary(p))
main = paste("observed vs predicted, log order :",i)
plot(df$date,logdaynj,main = main,ylab="cases",col="black")
lines(df$date,predict(p),col="blue")
plot(df$date,p$residuals,main="residual plot")
qqnorm(p$residuals,main="qqplot")
}
}
for(i in 1:10){trucmodel(i,"yes")}
trucmodel(4,"yes")
trucmodel(5,"yes")
trucmodel(10,"yes")
trucmodel(10,"no")
model(4,"yes")
raw<-read.csv("C:\\Users\\Stvma\\Documents\\GitHub\\Covid-19-Analysis\\time_series_covid_19_deaths.csv")
View(raw)
raw<-read.csv("C:\\Users\\Stvma\\Documents\\GitHub\\Covid-19-Analysis\\time_series_covid_19_deaths_US.csv",header=TRUE)
raw <- raw[which(Admin2=="New York"),]
raw <- raw[which(raw$Admin2=="New York"),]
raw <- raw[,c(-1:5,8:11)]
raw<-raw[,c(-1:5,=8:11)]
raw<-raw[,c(-1:5,-8:11)]
plot(raw[13:86])
plot(raw[,13:86])
plot(raw[13:86,])
raw[,13:86] <- as.numeric(raw[,13:86])
plot(raw[,13:86])
View(raw)
raw <- read.csv("C:\\Users\\Stvma\\Documents\\GitHub\\Covid-19-Analysis\\time_series_covid_19_deaths.csv",header=TRUE)
raw <- raw[,-c(3:4)]
raw[,3:ncol(raw)] <- as.integer(raw[,3:ncol(raw)])
date <- 1:(ncol(raw)-2)
date <- as.Date(date,origin = "2020-01-21")
format(date,format = "%b %d %y")
countr="US"
country <- raw[which(raw$Country.Region==countr),
country <- raw[which(raw$Country.Region==countr),]
]
country <- raw[which(raw$Country.Region==countr),]
View(country)
daysum <- rep(0,ncol(country)-2)
daysum
daysum <- as.integer(daysum)
daysum <- rep(0,ncol(country)-2)
for (i in 3:ncol(country)){
daysum[i-2] = sum(as.numeric(country[,i]))
}
daysum
main = paste("Daily Deaths in:",countr)
plot(date,daysum,main=main,ylab="deaths",type="o")
cplot("US")
cplot <- function(countr){
country <- raw[which(raw$Country.Region==countr),]
daysum <- rep(0,ncol(country)-2)
for (i in 3:ncol(country)){
daysum[i-2] = sum(as.numeric(country[,i]))
}
main = paste("Daily Deaths in:",countr)
plot(date,daysum,main=main,ylab="deaths",type="o")
}
cplot("US")
cplot("US")
cplot("Germany")
cplot("Italy")
clpot("Spain")
cplot("Spain")
cplot("China")
cplot <- function(countr){
country <- raw[which(raw$Country.Region==countr),]
daysum <- rep(0,ncol(country)-2)
newday <- rep(0,ncol(country)-2)
for (i in 3:ncol(country)){
daysum[i-2] = sum(as.numeric(country[,i]))
if (i > 3){
newday[i-2] <- daysum[i-1] - daysum[i-3]
}
}
newday[1] <- daysum[1]
main = paste("New Daily Deaths in:",countr)
plot(date,daysum,main=main,ylab="deaths",type="o")
}
cplot("US")
cplot("Germany")
cplot("Italy")
cplot("Spain")
cplot("China")
cplot <- function(countr){
country <- raw[which(raw$Country.Region==countr),]
daysum <- rep(0,ncol(country)-2)
newday <- rep(0,ncol(country)-2)
for (i in 3:ncol(country)){
daysum[i-2] = sum(as.numeric(country[,i]))
if (i > 3){
newday[i-2] <- daysum[i-1] - daysum[i-3]
}
}
newday[1] <- daysum[1]
main = paste("New Daily Deaths in:",countr)
plot(date,newday,main=main,ylab="deaths",type="o")
}
cplot("US")
cplot("Germany")
cplot("Italy")
cplot("Spain")
cplot("China")
cplot <- function(countr){
country <- raw[which(raw$Country.Region==countr),]
daysum <- rep(0,ncol(country)-2)
newday <- rep(0,ncol(country)-2)
for (i in 3:ncol(country)){
daysum[i-2] = sum(as.numeric(country[,i]))
}
newday[1] <- daysum[1]
for (i in 2:length(daysum)){
newday[i] <- daysum[i] - daysum[i-1]
}
main = paste("New Daily Deaths in:",countr)
plot(date,newday,main=main,ylab="deaths",type="o")
}
cplot("US")
cplot("Germany")
cplot("Italy")
cplot("Spain")
cplot("China")
cplot("South Korea")
cplot("Japan")
cplot("Poland")
cplot("France")
cplot("Louxemburg")
cplot("Indonesia")
cplot("Taiwan")
cplot("Malaysia")
cplot("Canada")
cplot("Australia")
cplot("New Zealand")
cplot("Mexico")
rawcases <- rawcases[,-c(3:4)]
rawcases <- read.csv("C:\Users\Stvma\Documents\GitHub\Covid-19-Analysis\Copy of time_series_covid_19_confirmed_4_6.csv",header=TRUE)
rawcases <- rawcases[,-c(3:4)]
rawcases <- read.csv("C:\\Users\\Stvma\\Documents\\GitHub\\Covid-19-Analysis\\Copy of time_series_covid_19_confirmed_4_6.csv",header=TRUE)
rawcases <- rawcases[,-c(3:4)]
View(rawcases)
View(raw)
View(rawcases)
date <- 1:(ncol(rawcases)-2)
date <- as.Date(date,origin = "2020-01-21")
format(date,format = "%b %d %y")
caseplot <- function(countr){
country <- rawcases[which(rawcases$Country.Region==countr),]
daysum <- rep(0,ncol(country)-2)
newday <- rep(0,ncol(country)-2)
for (i in 3:ncol(country)){
daysum[i-2] = sum(as.numeric(country[,i]))
}
newday[1] <- daysum[1]
for (i in 2:length(daysum)){
newday[i] <- daysum[i] - daysum[i-1]
}
main = paste("New Daily Cases in:",countr)
plot(date,newday,main=main,ylab="deaths",type="o")
}
caseplot("US")
datecase <- 1:(ncol(rawcases)-2)
datecase <- as.Date(date,origin = "2020-01-21")
format(datecase,format = "%b %d %y")
caseplot <- function(countr){
country <- rawcases[which(rawcases$Country.Region==countr),]
daysum <- rep(0,ncol(country)-2)
newday <- rep(0,ncol(country)-2)
for (i in 3:ncol(country)){
daysum[i-2] = sum(as.numeric(country[,i]))
}
newday[1] <- daysum[1]
for (i in 2:length(daysum)){
newday[i] <- daysum[i] - daysum[i-1]
}
main = paste("New Daily Cases in:",countr)
plot(datecase,newday,main=main,ylab="deaths",type="o")
}
caseplot("US")
caseplot("Canada")
caseplot("Mexico")
caseplot("Spain")
caseplot("France")
caseplot("Italy")
caseplot("Poland")
caseplot("Russia")
caseplot("China")
caseplot("Japan")
caseplot("Malaysia")
caseplot("Indonesia")
caseplot("Australia")
date <- 1:(ncol(raw)-2)
date <- as.Date(date,origin = "2020-01-21")
format(date,format = "%b %d %y")
cplot <- function(countr){
country <- raw[which(raw$Country.Region==countr),]
daysum <- rep(0,ncol(country)-2)
newday <- rep(0,ncol(country)-2)
for (i in 3:ncol(country)){
daysum[i-2] = sum(as.numeric(country[,i]))
}
newday[1] <- daysum[1]
for (i in 2:length(daysum)){
newday[i] <- daysum[i] - daysum[i-1]
}
main = paste("New Daily Deaths in:",countr)
plot(date,newday,main=main,ylab="deaths",type="o")
}
caseplot("Cana")
cplot("Russia")
deathplot <- function(countr){
country <- raw[which(raw$Country.Region==countr),]
daysum <- rep(0,ncol(country)-2)
newday <- rep(0,ncol(country)-2)
for (i in 3:ncol(country)){
daysum[i-2] = sum(as.numeric(country[,i]))
}
newday[1] <- daysum[1]
for (i in 2:length(daysum)){
newday[i] <- daysum[i] - daysum[i-1]
}
main = paste("New Daily Deaths in:",countr)
plot(date,newday,main=main,ylab="deaths",type="o")
}
deathplot("US")
deathplot("Germany")
deathplot("Italy")
deathplot("Spain")
deathplot("China")
