smoothcases <- rep(0,n)
for (i in 7:n){
smoothcases[i] <- mean(newcases[(i-6):i])
}
return(smoothcases)
}
stateplotdeaths <- function(state){
deaths <- colSums(uscases[which(usdeaths$Province_State==state),3:(n+2)])
newdeaths <- rep(0,n)
newdeaths[1] <- deaths[1]
newdeaths[2:n] <- diff(deaths)
smoothdeaths <- rep(0,n)
for (i in 7:n){
smoothdeaths[i] <- mean(newdeaths[(i-6):i])
}
return(smoothdeaths)
}
library(dplyr)
increase <- function(state){
indicator = "Null"
if(stateplot(state)[n]==0){
indicator = "No_Cases"
}
else if(max(stateplot(state)) %in% stateplot(state)[(n-6):n]){
indicator = "Increase"
}
else{
indicator = "Decrease"
}
return(indicator)
}
increasedeaths <- function(state){
indicator = "Null"
if(stateplotdeaths(state)[n]==0){
indicator = "No_Deaths"
}
else if(max(stateplotdeaths(state)) %in% stateplotdeaths(state)[(n-6):n]){
indicator = "Increase"
}
else{
indicator = "Decrease"
}
return(indicator)
}
numbercases = sapply(states,increase)
numberdeaths = sapply(states,increasedeaths)
statenum = data.frame(states,numbercases,numberdeaths)
barplot(table(statenum$numbercases),main="Number of States/Territories with Increasing/Decreasing Cases",
ylab = "Number of States/Territories")
increasing <- statenum[which(statenum$numbercases=="Increase"),]
decreasing <- statenum[which(statenum$numbercases=="Decrease"),]
up <- rowSums(sapply(increasing$states,stateplot))
down <- rowSums(sapply(decreasing$states,stateplot))
plot(date,down,main="Increasing Vs Decreasing States Cases Total",
xlab="Date",ylab="Cases",type="l",col="blue")
lines(date,up,type="l",col="red")
legend("topleft",legend=c("Increasing","Decreasing"),col=c("red","blue"),pch=c(1,1))
barplot(table(statenum$numberdeaths),main="Number of States/Territories with Increasing/Decreasing Deaths",
ylab = "Number of States/Territories")
increasing1 <- statenum[which(statenum$numberdeaths=="Increase"),]
decreasing1 <- statenum[which(statenum$numberdeaths=="Decrease"),]
up1 <- rowSums(sapply(increasing1$states,stateplotdeaths))
down1 <- rowSums(sapply(decreasing1$states,stateplotdeaths))
plot(date,down1,main="Increasing Vs Decreasing States Deaths Total",
xlab="Date",ylab="Deaths",type="l",col="blue")
lines(date,up1,type="l",col="red")
legend("topleft",legend=c("Increasing","Decreasing"),col=c("red","blue"),pch=c(1,1))
table(statenum$numbercases)
tables(statenum$numberdeaths)
table(statenum$numberdeaths)
uscases <- read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv"))
usdeaths <- read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv"))
uscases <- uscases[,-c(1:5,8:11)]
usdeaths <- usdeaths[,-c(1:5,8:12)]
n <- ncol(uscases) - 2
date <- 1:n
date <- as.Date(date,origin = "2020-01-21")
format(date,format = "%b %d %y")
states <- unique(uscases$Province_State)
stateplot <- function(state){
cases <- colSums(uscases[which(uscases$Province_State==state),3:(n+2)])
newcases <- rep(0,n)
newcases[1] <- cases[1]
newcases[2:n] <- diff(cases)
smoothcases <- rep(0,n)
for (i in 7:n){
smoothcases[i] <- mean(newcases[(i-6):i])
}
return(smoothcases)
}
stateplotdeaths <- function(state){
deaths <- colSums(usdeaths[which(usdeaths$Province_State==state),3:(n+2)])
newdeaths <- rep(0,n)
newdeaths[1] <- deaths[1]
newdeaths[2:n] <- diff(deaths)
smoothdeaths <- rep(0,n)
for (i in 7:n){
smoothdeaths[i] <- mean(newdeaths[(i-6):i])
}
return(smoothdeaths)
}
library(dplyr)
increase <- function(state){
indicator = "Null"
if(stateplot(state)[n]==0){
indicator = "No_Cases"
}
else if(max(stateplot(state)) %in% stateplot(state)[(n-6):n]){
indicator = "Increase"
}
else{
indicator = "Decrease"
}
return(indicator)
}
increasedeaths <- function(state){
indicator = "Null"
if(stateplotdeaths(state)[n]==0){
indicator = "No_Deaths"
}
else if(max(stateplotdeaths(state)) %in% stateplotdeaths(state)[(n-6):n]){
indicator = "Increase"
}
else{
indicator = "Decrease"
}
return(indicator)
}
numbercases = sapply(states,increase)
numberdeaths = sapply(states,increasedeaths)
statenum = data.frame(states,numbercases,numberdeaths)
barplot(table(statenum$numbercases),main="Number of States/Territories with Increasing/Decreasing Cases",
ylab = "Number of States/Territories")
increasing <- statenum[which(statenum$numbercases=="Increase"),]
decreasing <- statenum[which(statenum$numbercases=="Decrease"),]
up <- rowSums(sapply(increasing$states,stateplot))
down <- rowSums(sapply(decreasing$states,stateplot))
plot(date,down,main="Increasing Vs Decreasing States Cases Total",
xlab="Date",ylab="Cases",type="l",col="blue")
lines(date,up,type="l",col="red")
legend("topleft",legend=c("Increasing","Decreasing"),col=c("red","blue"),pch=c(1,1))
barplot(table(statenum$numberdeaths),main="Number of States/Territories with Increasing/Decreasing Deaths",
ylab = "Number of States/Territories")
increasing1 <- statenum[which(statenum$numberdeaths=="Increase"),]
decreasing1 <- statenum[which(statenum$numberdeaths=="Decrease"),]
up1 <- rowSums(sapply(increasing1$states,stateplotdeaths))
down1 <- rowSums(sapply(decreasing1$states,stateplotdeaths))
plot(date,down1,main="Increasing Vs Decreasing States Deaths Total",
xlab="Date",ylab="Deaths",type="l",col="blue")
lines(date,up1,type="l",col="red")
legend("topleft",legend=c("Increasing","Decreasing"),col=c("red","blue"),pch=c(1,1))
View(statenum)
uscases <- read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv"))
usdeaths <- read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv"))
uscases <- uscases[,-c(1:5,8:11)]
usdeaths <- usdeaths[,-c(1:5,8:11)]
state <- unique(as.character(uscases$Province_State))
n <- ncol(uscases) - 2
m <- length(state)
sum <- rep(0,m*n)
dim(sum) <- c(m,n)
for (i in 1:m){
for (j in 3:n+2){
temp <- uscases[which(uscases$Province_State==state[i]),]
sum[i,j] <- sum(temp[,j])
}
}
uscases <- read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv"))
uscases <- uscases[,-c(1:5,8:11)]
n <- ncol(uscases) - 2
date <- 1:n
date <- as.Date(date,origin = "2020-01-21")
format(date,format = "%b %d %y")
stateplot <- function(state){
cases <- colSums(uscases[which(uscases$Province_State==state),3:(n+2)])
newcases <- rep(0,n)
newcases[1] <- cases[1]
newcases[2:n] <- diff(cases)
smoothcases <- rep(0,n)
for (i in 7:n){
smoothcases[i] <- mean(newcases[(i-6):i])
}
mn = paste("New Cases In",state)
plot(date,smoothcases,main=mn,xlab="Date",ylab="New Cases",type="o")
}
stateplot("New Jersey")
uscases <- read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv"))
usdeaths <- read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv"))
uscases <- uscases[,-c(1:5,8:11)]
usdeaths <- usdeaths[,-c(1:5,8:12)]
n <- ncol(uscases)-2
date <- 1:n
date <- as.Date(date,origin = "2020-01-21")
format(date,format = "%b %d %y")
totcase <- colSums(uscases[,3:(n+2)])
totdeath <- colSums(usdeaths[,3:(n+2)])
newcase <- rep(0,n)
newdeath <- rep(0,n)
newcase[1] <- totcase[1]
newdeath[1] <- totdeath[1]
newcase[2:n] <- diff(totcase)
newdeath[2:n] <- diff(totdeath)
rollingcase <- rep(0,n)
rollingdeath <- rep(0,n)
for (i in 7:n){
rollingcase[i] <- mean(newcase[(i-6):i])
rollingdeath[i] <- mean(newdeath[(i-6):i])
}
wkday <- c("W","T","F","S","S","M","T")
plot(date,newcase,type="o",ylab="New Cases",xlab="Date",pch=wkday,
main="New Cases in the United States")
plot(date,newdeath,type="o",ylab="New Deaths",xlab="Date",pch=wkday,
main="New Deaths in the United States")
plot(date,rollingcase,type="o",ylab="New Cases",xlab="Date",
main="New Cases in the United States")
plot(date,rollingdeath,type="o",ylab="New Deaths",xlab="Date",
main="New Deaths in the United States")
plot(date,rollingcase,type="o",ylab="New Cases",xlab="Date",
main="New Cases in the United States")
rollingcase <- rep(0,n)
rollingdeath <- rep(0,n)
for (i in 30:n){
rollingcase[i] <- mean(newcase[(i-29):i])
rollingdeath[i] <- mean(newdeath[(i-29):i])
}
plot(date,rollingcase,type="o",ylab="New Cases",xlab="Date",
main="New Cases in the United States")
plot(date,rollingdeath,type="o",ylab="New Deaths",xlab="Date",
main="New Deaths in the United States")
uscases <- read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv"))
usdeaths <- read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv"))
uscases <- uscases[,-c(1:5,8:11)]
usdeaths <- usdeaths[,-c(1:5,8:12)]
n <- ncol(uscases)-2
date <- 1:n
date <- as.Date(date,origin = "2020-01-21")
format(date,format = "%b %d %y")
totcase <- colSums(uscases[,3:(n+2)])
totdeath <- colSums(usdeaths[,3:(n+2)])
newcase <- rep(0,n)
newdeath <- rep(0,n)
newcase[1] <- totcase[1]
newdeath[1] <- totdeath[1]
newcase[2:n] <- diff(totcase)
newdeath[2:n] <- diff(totdeath)
rollingcase <- rep(0,n)
rollingdeath <- rep(0,n)
for (i in 7:n){
rollingcase[i] <- mean(newcase[(i-6):i])
rollingdeath[i] <- mean(newdeath[(i-6):i])
}
plot(date,rollingcase,type="o",ylab="New Cases",xlab="Date",
main="New Cases in the United States")
plot(date,rollingdeath,type="o",ylab="New Deaths",xlab="Date",
main="New Deaths in the United States")
rawcases <- read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"))
rawdeaths <-read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"))
rawcases <- rawcases[,-c(3:4)]
rawdeaths <- rawdeaths[,-c(3:4)]
n <- ncol(rawcases)-2
date <- 1:n
date <- as.Date(date,origin = "2020-01-21")
format(date,format = "%b %d %y")
rawcases <- read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"))
rawdeaths <-read.csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"))
rawcases <- rawcases[,-c(3:4)]
rawdeaths <- rawdeaths[,-c(3:4)]
n <- ncol(rawcases)-2
date <- 1:n
date <- as.Date(date,origin = "2020-01-21")
format(date,format = "%b %d %y")
countryplot <- function(region){
cases <- rep(0,n)
newcases <- rep(0,n)
rollingcase <- rep(0,n)
regioncase <- rawcases[which(rawcases$Country.Region==region),]
for (i in 1:n){
cases[i] <- sum(regioncase[i+2])
if (i > 1){
newcases[i] <- cases[i] - cases[i-1]
}
}
newcases[1] <- cases[1]
for (i in 7:n){
rollingcase[i] <- mean(newcases[(i-6):i])
}
return(rollingcase)
}
plot(countryplot("Bolivia"))
NorthAm <- c("Canada","US","Mexico")
CentAm <- c("Belize","Costa Rica","El Salvador","Guatemala","Honduras",
"Nicaragua","Panama")
SouthAm <- c("Argentina","Bolivia","Brazil","Chile","Colombia","Ecuador",
"Guyana","Paraguay","Peru","Suriname",
"Uruguay","Venezuela")
Northtotal <- sapply(NorthAm,countryplot)
north <- rowSums(Northtotal)
Centraltotal <- sapply(CentAm,countryplot)
central  <- rowSums(Centraltotal)
Southtotal <- sapply(SouthAm,countryplot)
south <- rowSums(Southtotal)
plot(date,north,main="Moving Average - New Daily Cases in North America",
xlab = "Date", ylab = "New Cases",type = "o")
plot(date,central,main="Moving Average - New Daily Cases in Central America",
xlab = "Date", ylab = "New Cases",type = "o")
plot(date,south,main="Moving Average - New Daily Cases in South America",
xlab = "Date", ylab = "New Cases",type = "o")
plot(date,north,main="Moving Average - New Daily Cases in the Americas",
xlab = "Date", ylab = "New Cases",type = "l",col="blue",ylim=c(0,40000))
lines(date,central,col="green",type="l")
lines(date,south,col="red",type="l")
Africa <- c("Algeria","Angola","Benin","Botswana","Burkina Faso","Burundi",
"Cabo Verde","Cameroon","Central African Republic","Chad","Comoros","Congo (Brazzaville)",
"Congo (Kinshasa)","Cote d'Ivoire","Djibouti","Egypt","Equatorial Guinea",
"Eritrea","Eswatini","Ethiopia","Gabon","Gambia","Ghana","Guinea","Guinea-Bissau",
"Kenya","Lesotho","Liberia","Libya","Madagascar","Malawi","Mali","Mauritania",
"Mauritius","Morocco","Mozambique","Namibia","Niger","Nigeria","Rwanda",
"Sao Tome and Principe","Senegal","Seychelles","Sierra Leone","Somalia",
"South Africa","South Sudan","Sudan","Tanzania","Togo","Tunisia","Uganda",
"Zambia","Zimbabwe")
i=0
for (i in 1:length(Africa)){countryplot(Africa[i])}
AfricaTotal <- sapply(Africa,countryplot)
africa <- rowSums(AfricaTotal)
plot(date,africa,main="7 Day Moving Average Cases in Africa",
ylab="New Cases",xlab="Date",type="o")
Europe <- c("Albania","Andorra","Armenia","Austria","Azerbaijan","Belarus",
"Belgium","Bosnia and Herzegovina","Bulgaria","Croatia","Cyprus","Czechia",
"Denmark","Estonia","Finland","France","Georgia","Germany","Greece","Hungary",
"Iceland","Ireland","Italy","Kazakhstan","Kosovo","Latvia","Liechtenstein",
"Lithuania","Luxembourg","Malta","Moldova","Monaco","Montenegro",
"Netherlands","North Macedonia","Norway","Poland","Portugal","Romania",
"Russia","San Marino","Serbia","Slovakia","Slovenia","Spain","Sweden",
"Switzerland","Turkey","Ukraine","United Kingdom")
i=0
for (i in 1:length(Europe)){countryplot(Europe[i])}
EuropeTotal <- sapply(Europe,countryplot)
europe <- rowSums(EuropeTotal)
plot(date,europe,main="New Daily Cases in Several Continents",
xlab="Date",ylab="New Cases",type="l",col="blue")
lines(date,north,type="l",col="green")
lines(date,south,type="l",col="red")
lines(date,africa,type="l",col="orange")
Asia <- c("Afghanistan","Armenia","Azerbaijan","Bahrain","Bangladesh",
"Bhutan","Brunei","Cambodia","China","Cyprus","Georgia",
"India","Indonesia","Iran","Iraq","Israel","Japan","Jordan","Kazakhstan",
"Kuwait","Kyrgyzstan","Laos","Lebanon","Malaysia","Maldives","Mongolia",
"Nepal","Oman","Pakistan","Philippines",
"Qatar","Russia","Saudi Arabia","Singapore","Sri Lanka",
"Syria","Tajikistan","Thailand","Turkey",
"United Arab Emirates","Uzbekistan","Vietnam","Yemen")
i=0
for (i in 1:length(Asia)) {countryplot(Asia[i])}
AsiaTotal <- sapply(Asia,countryplot)
asia<-rowSums(AsiaTotal)
australia <- countryplot("Australia")
plot(date,europe,main="New Daily Cases in Several Continents",
xlab="Date",ylab="New Cases",type="l",col="blue")
lines(date,north,type="l",col="green")
lines(date,(south+central),type="l",col="red")
lines(date,africa,type="l",col="orange")
lines(date,(asia+australia),type="l",col="purple")
legend("topleft",legend=c("Europe","North America","Central and South America",
"Africa","Asia and Australia"),col=c("blue","green","red","orange","purple"),
pch=c(1,1),lty=c(.5,.5))
total <- europe + north + south + central + asia + australia + africa
plot(date,total,main="New Daily Cases in Several Continents",
xlab="Date",ylab="New Cases",type="l",col="black")
lines(date,europe,type="l",col="blue")
lines(date,north,type="l",col="green")
lines(date,(south+central),type="l",col="red")
lines(date,africa,type="l",col="orange")
lines(date,(asia+australia),type="l",col="purple")
legend("topleft",legend=c("World Total","Europe","North America","Central and South America",
"Africa","Asia and Australia"),col=c("black","blue","green","red","orange","purple"),
pch=c(1,1),lty=c(.5,.5))
plot(date,europe,main="New Daily Cases in Several Continents",
xlab="Date",ylab="New Cases",type="l",col="blue",ylim=100000)
lines(date,north,type="l",col="green")
lines(date,(south+central),type="l",col="red")
lines(date,africa,type="l",col="orange")
lines(date,(asia+australia),type="l",col="purple")
legend("topleft",legend=c("Europe","North America","Central and South America",
"Africa","Asia and Australia"),col=c("blue","green","red","orange","purple"),
pch=c(1,1),lty=c(.5,.5))
plot(date,europe,main="New Daily Cases in Several Continents",
xlab="Date",ylab="New Cases",type="l",col="blue",ylim=c(0,100000))
lines(date,north,type="l",col="green")
lines(date,(south+central),type="l",col="red")
lines(date,africa,type="l",col="orange")
lines(date,(asia+australia),type="l",col="purple")
legend("topleft",legend=c("Europe","North America","Central and South America",
"Africa","Asia and Australia"),col=c("blue","green","red","orange","purple"),
pch=c(1,1),lty=c(.5,.5))
plot(date,europe,main="New Daily Cases in Several Continents",
xlab="Date",ylab="New Cases",type="l",col="blue",ylim=c(0,70000))
lines(date,north,type="l",col="green")
lines(date,(south+central),type="l",col="red")
lines(date,africa,type="l",col="orange")
lines(date,(asia+australia),type="l",col="purple")
legend("topleft",legend=c("Europe","North America","Central and South America",
"Africa","Asia and Australia"),col=c("blue","green","red","orange","purple"),
pch=c(1,1),lty=c(.5,.5))
plot(date,europe,main="New Daily Cases in Several Continents",
xlab="Date",ylab="New Cases",type="l",col="blue",ylim=c(0,70000))
lines(date,north,type="l",col="green")
lines(date,(south+central),type="l",col="red")
lines(date,africa,type="l",col="orange")
lines(date,(asia+australia),type="l",col="purple")
legend("topleft",legend=c("Europe","North America","Central and South America",
"Africa","Asia and Australia"),col=c("blue","green","red","orange","purple"),
pch=c(1,1),lty=c(.5,.5),bty="n")
plot(date,rollingcase,type="o",ylab="New Cases",xlab="Date",
main="New Cases in the United States")
plot(date,rollingdeath,type="o",ylab="New Deaths",xlab="Date",
main="New Deaths in the United States")
tests <- import.csv("C:\Users\smaci\Documents\GitHub\Covid-19-Analysis\daily.csv",header=T)
tests <- import.csv("C:\\Users\\smaci\\Documents\\GitHub\\Covid-19-Analysis\\daily.csv",header=T)
tests <- read.csv("C:\\Users\\smaci\\Documents\\GitHub\\Covid-19-Analysis\\daily.csv",header=T)
View(tests)
test$total <- tests$positive + tests$negative + tests$pending
test$positiverate <- tests$positive / tests$total
tests$total <- tests$positive + tests$negative + tests$pending
tests$positiverate <- tests$positive / tests$total
View(tests)
tests$positiverate <- tests$positive / tests$total *100
plot(n,test$total,main="Total Covid-19 tests in the United States")
plot(n,tests$total,main="Total Covid-19 tests in the United States",
xlab = "Date", ylab = "Total Tests")
length(tests$positive)
length(tests$total)
View(tests)
tests <- read.csv("C:\\Users\\smaci\\Documents\\GitHub\\Covid-19-Analysis\\daily.csv",header=T)
tests$total <- tests$positive + tests$negative + tests$pending
tests$positiverate <- tests$positive / tests$total *100
plot(n,tests$total,main="Total Covid-19 tests in the United States",
xlab = "Date", ylab = "Total Tests")
View(tests)
plot(n,tests$totalTestResults,main="Total Covid-19 tests in the United States",
xlab = "Date",ylab = "Total Tests")
plot(date,tests$totalTestResults,main="Total Covid-19 tests in the United States",
xlab = "Date",ylab = "Total Tests")
tests <- read.csv("C:\\Users\\smaci\\Documents\\GitHub\\Covid-19-Analysis\\daily.csv",header=T)
tests$total <- tests$positive + tests$negative + tests$pending
tests$positiverate <- tests$positive / tests$total *100
plot(date,tests$total,main="Total Covid-19 tests in the United States",
xlab = "Date",ylab = "Daily Tests")
newpositive[2:n] <- diff(tests$positve)
tests <- read.csv("C:\\Users\\smaci\\Documents\\GitHub\\Covid-19-Analysis\\daily.csv",header=T)
library(dplyr)
tests %>% arrange(-row_number())
data
View(tests)
tests %>% arrange(-row_number())
View(tests)
library(dplyr)
tests %>% arrange(-date())
tests %>% arrange(-tests$date())
tests %>% arrange(-row_number())
View(tests)
tests %>% map_df(rev)
library(dplyr)
tests %>% map_df(rev)
library(purrr)
tests %>% map_df(rev)
View(tests)
tests <- read.csv("C:\\Users\\smaci\\Documents\\GitHub\\Covid-19-Analysis\\daily.csv",header=T)
index <- 1:n
tests <- dataframe(tests,index)
tests <- data.frame(tests,index)
View(tests)
tests <- tests[(order(-tests$index)),]
View(tests)
newpositive <- rep(0,n)
newnegative <- rep(0,n)
newpending <- rep(0,n)
newpositive[1] <- positive[1]
newnegative[1] <- negative[1]
newpending[1] <- pending[1]
newpositive[2:n] <- diff(positive)
newnegative[2:n] <- diff(negative)
newpending[2:n] <- diff(pending)
newpositive <- rep(0,n)
newnegative <- rep(0,n)
newpending <- rep(0,n)
newpositive[1] <- tests$positive[1]
newnegative[1] <- tests$negative[1]
newpending[1] <- tests$pending[1]
newpositive[2:n] <- diff(tests$positive)
newnegative[2:n] <- diff(tests$negative)
newpending[2:n] <- diff(tests$pending)
total <- newpositive + newnegative + newpending
newpositive
newnegative
newpending
total <- newpositive + newnegative
plot(date,total,main="Total Covid-19 tests in the United States",
xlab = "Date",ylab = "Daily Tests")
plot(date,total,main="Total Covid-19 tests in the United States",
xlab = "Date",ylab = "Daily Tests",type="l")
plot(data,percentpositive,main="Percentage of positive Covid-19 tests in the United States",
xlab = "Date",ylab="Percentage of Positive Tests",type="l")
percentpositive <- newpositive / total * 100
plot(data,percentpositive,main="Percentage of positive Covid-19 tests in the United States",
xlab = "Date",ylab="Percentage of Positive Tests",type="l")
plot(date,percentpositive,main="Percentage of positive Covid-19 tests in the United States",
xlab = "Date",ylab="Percentage of Positive Tests",type="l")
date
plot(date[36:n],percentpositive[36:n],main="Percentage of positive Covid-19 tests in the United States",
xlab = "Date",ylab="Percentage of Positive Tests",type="l")
plot(date,total,main="Daily Covid-19 tests in the United States",
xlab = "Date",ylab = "Daily Tests",type="l")
